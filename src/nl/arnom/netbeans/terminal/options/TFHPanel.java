/*
 * Copyright (c) 2013, Arno Moonen.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files
 * (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package nl.arnom.netbeans.terminal.options;

import nl.arnom.netbeans.terminal.TerminalHelper;

final class TFHPanel extends javax.swing.JPanel {

    private final TFHOptionsPanelController controller;

    TFHPanel(TFHOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize
     * the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        labelCommand = new javax.swing.JLabel();
        inputCommand = new javax.swing.JTextField();
        mainScrollPane = new javax.swing.JScrollPane();
        textHelp = new javax.swing.JTextArea();

        labelCommand.setFont(labelCommand.getFont().deriveFont(labelCommand.getFont().getStyle() | java.awt.Font.BOLD));
        org.openide.awt.Mnemonics.setLocalizedText(labelCommand, org.openide.util.NbBundle.getMessage(TFHPanel.class, "TFHPanel.labelCommand.text")); // NOI18N

        textHelp.setEditable(false);
        textHelp.setBackground(labelCommand.getBackground());
        textHelp.setColumns(20);
        textHelp.setFont(textHelp.getFont().deriveFont((textHelp.getFont().getStyle() | java.awt.Font.ITALIC)));
        textHelp.setForeground(labelCommand.getForeground());
        textHelp.setLineWrap(true);
        textHelp.setRows(5);
        textHelp.setText(org.openide.util.NbBundle.getMessage(TFHPanel.class, "TFHPanel.textHelp.text")); // NOI18N
        textHelp.setWrapStyleWord(true);
        textHelp.setBorder(labelCommand.getBorder());
        textHelp.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        textHelp.setDisabledTextColor(labelCommand.getForeground());
        textHelp.setEnabled(false);
        mainScrollPane.setViewportView(textHelp);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                    .addComponent(labelCommand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputCommand))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCommand)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputCommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        inputCommand.setText(TerminalHelper.getConfiguredCommand());
    }

    void store() {
        TerminalHelper.setConfiguredCommand(inputCommand.getText());
    }

    boolean valid() {
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField inputCommand;
    private javax.swing.JLabel labelCommand;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JTextArea textHelp;
    // End of variables declaration//GEN-END:variables
}